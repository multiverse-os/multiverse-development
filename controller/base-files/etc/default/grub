##
## Multiverse OS: Universal Bootloader Configuration
###############################################################################
#
# Requires ability to generate bootloader configuration files for both host
# and virtual machine grub bootloaders which will be quite different.
#
###############################################################################

###############################################################################
#### Task List
###############################################################################
#### TODO: Add AMD support:
####		amd_iommu=pt
#### 		(and instead of vmx cpu feature, smx will be required) 
###############################################################################

###############################################################################
## NUMA Optimization
###############################################################################
#
# This is important in the same way that CPU pinning helps, it allows for
# greater compartmentalization but also association of hardware that is 
# physically closer or associated in the hardware. In the same way you need
# to pin core subunits as pairs since thats how the physical CPU cores are 
# designed.
#
###############################################################################

###############################################################################
## ACS Override PCI Passthrough
###############################################################################
# ACS Override patch: 
#     To bypass vfio groups to get finer grain control of indivdiual PCI 
#     devices can be passed through. This enables pass through a single device
#     in a group, for example an individual usb device can be passed through
#     instead of requiring an entire usb controller typically 3 usb slots on
#     a motherboard. 
#
#       ._____________________________________________________________.
#     	|  This may be better for the controller but not the host     |
#     	|_____________________________________________________________|
#
#    Options for `pcie_acs_override`:
#    	* [downstream] all downstream ports, full ACS capabilities.
#    	* [multifunction] all multifunciton devices - multifunction ACS subset.
#    	* [id:nnnn:nnnn] specific device - full ACS capabilities; specified 
#    	  as `vendor_id:device_id` in hex.
#
#   Both `downstream` and `multifunction` can be used together, so maximum
#   device granularity can be obtained by using the following configuration:
#   	
#   	`pcie_acs_override=downstream,multifunction`
#
#   For utilizing the OVMF firmware, use edk2-ovmf package, copy the UEFI 
#   variables from the shared location:
#
#   	`/usr/share/edk2-ovmf/x64//OVMF_VARS.fd`
#
#   Then copy this file to a temporary location and specify the OVMF paths 
#   by defining BIOS nvram very explicity:
#
#   	`-drive if=pflash,format=raw,readonly,file=/tmp/MY_VARS.fd`
#
###############################################################################
GRUB_DEFAULT=0
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Multiverse OS: Bare-metal Host Machine`
GRUB_CMDLINE_LINUX_DEFAULT="quiet intel_iommu=on iommu=pt pci=realloc nosmt=force nomodeset isolcpus=1-6,11-16"
GRUB_CMDLINE_LINUX=""
###############################################################################
#
###############################################################################


###############################################################################
# Uncomment to enable BadRAM filtering, modify to suit your needs
# This works with Linux (no patch required) and with any kernel that obtains
# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)
###############################################################################
#GRUB_BADRAM="0x01234567,0xfefefefe,0x89abcdef,0xefefefef"


###############################################################################
# Uncomment to disable graphical terminal (grub-pc only)
###############################################################################
#GRUB_TERMINAL=console


###############################################################################
# The resolution used on graphical terminal
# note that you can use only modes which your graphic card supports via VBE
# you can see them in real GRUB with the command `vbeinfo'
###############################################################################
#GRUB_GFXMODE=640x480


###############################################################################
# Uncomment if you don't want GRUB to pass "root=UUID=xxx" parameter to Linux
###############################################################################
#GRUB_DISABLE_LINUX_UUID=true


###############################################################################
# Uncomment to disable generation of recovery mode menu entries
###############################################################################
#GRUB_DISABLE_RECOVERY="true"


