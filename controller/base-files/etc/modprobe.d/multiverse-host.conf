#
# Multiverse OS
###############################################################################
# NOTE: Multiverse OS requires a script to scan devices and blacklist all NIC 
# kernel modules using `lspci -k` to find them. 
#
###############################################################################
## Blacklisted Kernel Module ##################################################
###############################################################################
# Some of these kernel modules are removed by default for security or general #
# reasons and apply to most machines, such as pcspkr. However set of these    #
# may be set by Multiverse configuration after scanning the system hardware.  #
###############################################################################

## Annoying
###############################################################################
blacklist pcspkr

## Security 
###############################################################################
blacklist bluetooth

## Video Cards
###############################################################################
# Blacklist All GPUs
# Nvidia GPUs
blacklist nouveau
# Intel GPUs
blacklist igb
# Radeon GPUs
blacklist radeon
blacklist radeonfb
# AMD GPUs
blacklist amdgpu



## Network Cards
###############################################################################
# Blacklist network cards (extra layer to prevent host networking)
# Add all known kernel modules for network cards, can be found in /sys/*
# ## TODO: Autogenerate based on what is loaded by the default debian install and blacklist basically everything.
#blacklist r8169e_pci
#blacklist r8169u_usb
#blacklist r8712u
#blacklist rtl8xxxu
blacklist r8169
blacklist e1000e 
blacklist alx
# blacklist rxrcp

## Sound Cards
###############################################################################
blacklist snd_hda_intel


###############################################################################
## VM SPECIFIC KERNEL MODULE CONFIGURATIONS ###################################
###############################################################################
## Unix Socket
# module KSOCKLND
#parm: sock_timeout:dead socket timeout (seconds) (int)
#parm: credits:# concurrent sends (int)
#parm: peer_credits:# concurrent sends to 1 peer (int)
#parm: peer_buffer_credits:# per-peer router buffer credits (int)
#parm: peer_timeout:Seconds without aliveness news to declare peer dead (<=0 to disable) (int)
#parm: nscheds:# scheduler daemons in each pool while starting (int)
#parm: nconnds:# connection daemons while starting (int)
#parm: nconnds_max:max # connection daemons (int)
#parm: min_reconnectms:min connection retry interval (mS) (int)
#parm: max_reconnectms:max connection retry interval (mS) (int)
#parm: eager_ack:send tcp ack packets eagerly (int)
#parm: typed_conns:use different sockets for bulk (int)
#parm: min_bulk:smallest 'large' message (int)
#parm: tx_buffer_size:socket tx buffer size (0 for system default) (int)
#parm: rx_buffer_size:socket rx buffer size (0 for system default) (int)
#parm: nagle:enable NAGLE? (int)
#parm: round_robin:Round robin for multiple interfaces (int)
#parm: keepalive:# seconds before send keepalive (int)
#parm: keepalive_idle:# idle seconds before probe (int)
#parm: keepalive_count:# missed probes == dead (int)
#parm: keepalive_intvl:seconds between probes (int)
#parm: enable_csum:enable check sum (int)
#parm: inject_csum_error:set non-zero to inject a checksum error (int)
#parm: nonblk_zcack:always send ZC-ACK on non-blocking connection (int)
#parm: zc_min_payload:minimum payload size to zero copy (int)
#parm: zc_recv:enable ZC recv for Chelsio driver (int)
#parm: zc_recv_min_nfrags:minimum # of fragments to enable ZC recv (int)


## AFS
#parm: debug:AFS debugging mask (uint)
#parm: rootcell:root AFS cell name and VL server IP addr list (charp)

## VXLAN
#parm:           udp_port:Destination UDP port (ushort)
#parm:           log_ecn_error:Log packets received with corrupted ECN (bool


## VIDOEBUFF2_V42DL
#parm:           debug:int

## DRM
#parm:           edid_fixup:Minimum number of valid EDID header bytes (0-8, default 6) (int)
#parm:           debug:Enable debug output, where each bit enables a debug category.
#		Bit 0 (0x01) will enable CORE messages (drm core code)
#				Bit 1 (0x02) will enable DRIVER messages (drm controller code)
#						Bit 2 (0x04) will enable KMS messages (modesetting code)
#								Bit 3 (0x08) will enable PRIME messages (prime code)
#										Bit 4 (0x10) will enable ATOMIC messages (atomic code)
#												Bit 5 (0x20) will enable VBL messages (vblank code) (int)
#												parm:           vblankoffdelay:Delay until vblank irq auto-disable [msecs] (0: never disable, <0: disable immediately) (int)
#												parm:           timestamp_precision_usec:Max. error on timestamps [usecs] (int)
#												parm:           timestamp_monotonic:Use monotonic timestamps (int)
#

## FSCRYPTO
#parm:           num_prealloc_crypto_pages:Number of crypto pages to preallocate (uint)
#parm:           num_prealloc_crypto_ctxs:Number of crypto contexts to preallocate (uint)
#


## NVME
options nvme use_threaded_interrupts=1
#parm:           use_threaded_interrupts:int
options nvme use_cmd_sqes=1
#parm:           use_cmb_sqes:use controller's memory buffer for I/O SQes (bool)

## NVME_CORE
#parm:           admin_timeout:timeout in seconds for admin commands (byte)
#parm:           io_timeout:timeout in seconds for I/O (byte)
#parm:           shutdown_timeout:timeout in seconds for controller shutdown (byte)
#parm:           max_retries:max number of retries a command may have (uint)
#parm:           nvme_char_major:int



## XHCI_HCD
#parm:           link_quirk:Don't clear the chain bit on a link TRB (int)
#parm:           quirks:Bit flags for quirks to be enabled as default (uint)


## USBCORE
#parm:           usbfs_snoop:true to log all usbfs traffic (bool)
#parm:           usbfs_snoop_max:maximum number of bytes to print while snooping (uint)
#parm:           usbfs_memory_mb:maximum MB allowed for usbfs buffers (0 = no limit) (uint)
#parm:           authorized_default:Default USB device authorization: 0 is not authorized, 1 is authorized, -1 is authorized except for wireless USB (default, old behaviour (int)
#parm:           blinkenlights:true to cycle leds on hubs (bool)
#parm:           initial_descriptor_timeout:initial 64-byte descriptor request timeout in milliseconds (default 5000 - 5.0 seconds) (int)
#parm:           old_scheme_first:start with the old device initialization scheme (bool)
#parm:           use_both_schemes:try the other device initialization scheme if the first one fails (bool)
#parm:           nousb:bool
#parm:           autosuspend:default autosuspend delay (int)
#


## PCI Passthrough Configuration
###############################################################################
# NOTE: Experimental (In the past remember learning this was uncessary or ill 
# advised.
# module VFIO_IOMMU_TYPE1
options vfio_iommu_type1 allow_unsafe_interrupts=1
#options vfio_iommu_type1 allow_unsafe_interrupts:bool
#	 Enable VFIO IOMMU support on platforms without interrupt remapping.
#options disable_hugepages:bool
#	 Disable VFIO IOMMU support for IOMMU hugepages. 
#options dma_entry_limit:uint:65535
#	 Maximum number of user DMA mappings per container.





#==============================================================================
## VIRTIO
# module VIRTIO_NET
# parm:           napi_weight:int
# parm:           csum:bool
# parm:           gso:bool



## VIRTIO GPU
# module VIRTIO_GPU
#parm:           fbdev:Disable/Enable framebuffer device & console (int)
#parm:           modeset:Disable/Enable modesetting (int)

## VIRTIO BLK
# module VIRITIO_BLK
#parm:           queue_depth:uint


## VIRTIO BALLOON
# module viritio_balloon
#parm:           oom_pages:pages to free on OOM (int)

## VIRTIO PCI
# module virtio_pci
#parm:           force_legacy:Force legacy mode for transitional virtio 1 devices (bool)


#==============================================================================
# module VFIO_PCI
#options vfio_pci ids:vendor:device[:subvendor[:subdevice[:class[:class_mask]]]]
#	 Initial PCI IDs to add to the vfio driver, format is and multiple comma separated entries can be specified (string)

#options vfio_pci nointxmask:bool
#	 Disable support for PCI 2.3 style INTx masking.  If this resolves problems for specific devices, report lspci -vvvxxx to linux-pci@vger.kernel.org so the device can be fixed automatically via the broken_intx_masking flag.
#options vfio_pci disable_vga=1
#options vfio_pci disable_vga:bool
#	 Disable VGA resource access through vfio-pci (bool)
#options vfio_pci disable_idle_d3=1
#options vfio_pci disable_idle_d3:bool
#	 Disable using the PCI D3 low power state for idle, unused devices (bool)


## Virtual Networking
###############################################################################
# module VHOST_NET (VHOST is KERNEL ACCELERATED VirtIO)
options vhost_net experimental_zcopytx=1
#options vhost_net experimental_zcopytx:bool
#==============================================================================
# module VHOST
options vhost max_mem_regions=128
options vhost max_iotlb_entries=4096
#options vhost max_mem_regions:ushort:64
#	 Maximum number of memory regions in memory map.
#options vhost max_iotlb_entries:int:2048
#	 Maximum number of iotlb entries.

## Nested VM Configuration
###############################################################################
# module KVM_INTEL
options kvm_intel vpid=1
options kvm_intel flexpriority=1
options kvm_intel ept=1
#options kvm_intel emulate_invalid_guest_state=1
options kvm_intel fasteoi=1
#options kvm_intel vmm_exclusive=1
options kvm_intel enable_apicv=1
options kvm_intel enable_shadow_vmcs=1
options kvm_intel nested=1
options kvm_intel pml=1
options kvm_intel preemption_timer=1
#options kvm_intel ple_gap

#options kvm_intel param: vpid:bool:1
#options kvm_intel param: flexpriority:bool:1
#options kvm_intel param: ept:bool:1
#options kvm_intel param: unrestricted_guest:bool:1
#options kvm_intel param: eptad:bool
#options kvm_intel param: emulate_invalid_guest_state:bool:0
#options kvm_intel param: vmm_exclusive:bool
#options kvm_intel param: fasteoi:bool
#options kvm_intel param: enable_apicv:bool
#options kvm_intel param: enable_shadow_vmcs:bool:0
#options kvm_intel param: nested:bool
#options kvm_intel param: pml:bool
#options kvm_intel param: preemption_timer:bool
#options kvm_intel param: ple_gap:int
#options kvm_intel param: ple_window:int
#options kvm_intel param: ple_window_grow:int
#options kvm_intel param: ple_window_shrink:int
#options kvm_intel param: ple_window_max:int


# module KVM
#options kvm allow_unsafe_interrupts=1
options kvm kvmclock_periodic_sync=1
options kvm vector_hashing=1
#options kvm tsc_tolerance_ppm
#options kvm param: allow_unsafe_assigned_interrupts:bool
#options kvm param: nx_huge_pages:bool
#options kvm param: nx_huge_pages_recovery_ratio:uint
#options kvm param: ignore_msrs:bool
#options kvm param: min_timer_period_us:uint
#options kvm param: kvmclock_periodic_sync:bool
#options kvm param: tsc_tolerance_ppm:uint
#options kvm param: lapic_timer_advance_ns:uint
#options kvm param: vector_hashing:bool
#options kvm param: halt_poll_ns:uint
#options kvm param: halt_poll_ns_grow:uint
#options kvm param: halt_poll_ns_shrink:uint

#==============================================================================

# module KVM_AMD
#options kvm_amd nested=1
#parm:           npt:int
#parm:           nested:int
#parm:           avic:int


